knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
train = read.csv("./data/train.csv")
head(train)
str(train)
test = read.csv("./data/test.csv")
dat = rbind(train, test)
test$SalePrice = 1000
dat = rbind(train, test)
indx = nrow(train)
str(train)
str(train)
dat$MSSubClass = factor(dat$MSSubClass)
dat$OverallCond = factor(dat$OverallCond)
dat$OverallQual = factor(dat$OverallQual)
train = dat[1:indx,]
test = dat[indx+1:nrow(dat),]
tail(test)
test = read.csv("./data/test.csv")
test$SalePrice = 1000
train = read.csv("./data/train.csv")
dat = rbind(train, test)
tail(dat$Id)
dat[1461,]
tail(dat)
dat$MSSubClass = factor(dat$MSSubClass)
dat$OverallCond = factor(dat$OverallCond)
dat$OverallQual = factor(dat$OverallQual)
indx+1
nrow(dat)
indx+1:nrow(dat)
train = dat[1:indx,]
test = dat[indx+1:nrow(dat),]
str(test)
test$Id
tail(test$Id)
dat[indx+1:nrow(dat), "Id"]
test = read.csv("./data/test.csv")
test = dat[(indx+1):nrow(dat),]
train = dat[1:indx,]; test = dat[(indx+1):nrow(dat),]; rm(dat)
na.count(train)
na.count = function (dat){
dat %>% apply(., 2, is.na) %>% apply(.,2,sum) %>% .[.!=0]
}
na.count(train)
library(dplyr)
library(ggplot2)
library(glmnet)
na.count(train)
dat = rbind(train, test)
na.count(dat[1:indx,])
levels(dat$Alley) = c(levels(dat$Alley), "NoAccess"); dat[is.na(dat$Alley), "Alley"] = "NoAccess"
?drop
?droplevels
levels(dat$Alley) = c(levels(dat$Alley), "NoAccess"); dat[is.na(dat$Alley), "Alley"] = "NoAccess"
levels(dat$BsmtQual) = c(levels(dat$BsmtQual), "NoBsmt"); dat[is.na(dat$BsmtQual), "BsmtQual"] = "NoBsmt"
levels(dat$BsmtCond) = c(levels(dat$BsmtCond), "NoBsmt"); dat[is.na(dat$BsmtCond), "BsmtCond"] = "NoBsmt"
levels(dat$BsmtExposure) = c(levels(dat$BsmtExposure), "NoBsmt"); dat[is.na(dat$BsmtExposure), "BsmtExposure"] = "NoBsmt"
levels(dat$BsmtFinType1) = c(levels(dat$BsmtFinType1), "NoBsmt"); dat[is.na(dat$BsmtFinType1), "BsmtFinType1"] = "NoBsmt"
levels(dat$BsmtFinType2) = c(levels(dat$BsmtFinType2), "NoBsmt"); dat[is.na(dat$BsmtFinType2), "BsmtFinType2"] = "NoBsmt"
levels(dat$FireplaceQu) = c(levels(dat$FireplaceQu), "NoFpl"); dat[is.na(dat$FireplaceQu), "FireplaceQu"] = "NoFpl"
levels(dat$GarageType) = c(levels(dat$GarageType), "NoGrg"); dat[is.na(dat$GarageType), "GarageType"] = "NoGrg"
levels(dat$GarageFinish) = c(levels(dat$GarageFinish), "NoGrg"); dat[is.na(dat$GarageFinish), "GarageFinish"] = "NoGrg"
levels(dat$GarageQual) = c(levels(dat$GarageQual), "NoGrg"); dat[is.na(dat$GarageQual), "GarageQual"] = "NoGrg"
levels(dat$GarageCond) = c(levels(dat$GarageCond), "NoGrg"); dat[is.na(dat$GarageCond), "GarageCond"] = "NoGrg"
levels(dat$PoolQC) = c(levels(dat$PoolQC), "NoPool"); dat[is.na(dat$PoolQC), "PoolQC"] = "NoPool"
levels(dat$Fence) = c(levels(dat$Fence), "NoFence"); dat[is.na(dat$Fence), "Fence"] = "NoFence"
levels(dat$MiscFeature) = c(levels(dat$MiscFeature), "NoMisc"); dat[is.na(dat$MiscFeature), "MiscFeature"] = "NoMisc"
na.count(dat[1:indx,])
levels(dat$Alley)
print("Property Ids reporting NA for GarageYrBlt")
dat[i:indx,] %>% .[is.na(.$GarageYrBlt),c("Id", "GarageType", "GarageYrBlt")]
print("Property Ids reporting NA for GarageYrBlt")
dat[1:indx,] %>% .[is.na(.$GarageYrBlt),c("Id", "GarageType", "GarageYrBlt")]
table(dat$Electrical[1:indx], dnn = "Elec. System Used")
table(dat$MasVnrType[1:indx], dnn = "Masonry Veneer Type")
hist(dat$MasVnrArea[1:indx], xlab = "Area", main = "Histogram of MasVnrArea")
hist(dat$LotFrontage[1:indx], xlab = "Area", main = "Histogram of LotArea")
table(dat$Electrical[1:indx], dnn = "Elec. System Used") %>% prop.table()
table(dat$Electrical[1:indx], dnn = "Elec. System Used") %>% prop.table() %>% round(digits = 4)
table(dat$MasVnrType[1:indx], dnn = "Masonry Veneer Type") %>% prop.table() %>% round(digits = 4)
dat[is.na(dat$Electrical), "Electrical"] = dat$Electrical[1:indx] %>% table() %>% which.max() %>% names()
dat[is.na(dat$MasVnrType), "MasVnrType"] = dat$MasVnrType[1:indx] %>% table() %>% which.max() %>% names()
dat[is.na(dat$MasVnrArea), "MasVnrArea"] = dat$MasVnrArea[1:indx] %>% median(., na.rm = TRUE)
dat[is.na(dat$LotFrontage), "LotFrontage"] = dat$LotFrontage[1:indx] %>% median(., na.rm = TRUE)
dat = subset(dat, select = -GarageYrBlt)
na.count(dat[1:indx,])
#saveRDS(train, "../RDA/train.RDS")   #   Saving a baseline
dat[is.na(dat$Electrical), "Electrical"] = dat$Electrical[1:indx] %>% table() %>% which.max() %>% names()
dat[is.na(dat$MasVnrType), "MasVnrType"] = dat$MasVnrType[1:indx] %>% table() %>% which.max() %>% names()
dat[is.na(dat$MasVnrArea), "MasVnrArea"] = dat$MasVnrArea[1:indx] %>% median(., na.rm = TRUE)
dat[is.na(dat$LotFrontage), "LotFrontage"] = dat$LotFrontage[1:indx] %>% median(., na.rm = TRUE)
dat = subset(dat, select = -GarageYrBlt)
na.count(dat[1:indx,])
na.count(dat[(indx+1):ncol(dat),])
dat$Id[(indx+1):ncol(dat)]
range(train$Id)
range(test$Id)
na.count(dat[(indx+1):nrow(dat),])
dat[is.na(dat$Exterior1st), c("Id", "Exterior1st", "Exterior2nd")]
dat[is.na(dat$Exterior1st), c("Id", "Exterior1st", "Exterior2nd")]
na.count(dat[(indx+1):nrow(dat),])
dat[is.na(dat$BsmtFinSF1), c("Id", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF")]
dat[is.na(dat$BsmtFullBath), c("Id", "BsmtFullBath", "BsmtHalfBath")]
dat[is.na(dat$Exterior1st), c("Id", "Exterior1st", "Exterior2nd")]
dat[is.na(dat$BsmtFinSF1), c("Id", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF")]
dat[is.na(dat$BsmtFullBath), c("Id", "BsmtFullBath", "BsmtHalfBath")]
dat[is.na(dat$KitchenQual), "Id"]
dat[is.na(dat$Functional), "Id"]
dat[is.na(dat$GarageCars), c("Id", "GarageCars", "GarageArea")]
dat[is.na(dat$SaleType), "Id"]
dat[is.na(dat$Exterior1st), c("Id", "Exterior1st", "Exterior2nd")]
dat[is.na(dat$BsmtFinSF1), c("Id", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF")]
dat[is.na(dat$BsmtFullBath), c("Id", "BsmtFullBath", "BsmtHalfBath")]
dat[is.na(dat$KitchenQual), c("Id", "KitchenQual")]
dat[is.na(dat$Functional), c("Id", "Functional")]
dat[is.na(dat$GarageCars), c("Id", "GarageCars", "GarageArea")]
dat[is.na(dat$SaleType), c("Id", "SaleType")]
dat[is.na(dat$Exterior1st), c("Id", "MSSubClass", "Exterior1st", "Exterior2nd")]
dat[is.na(dat$GarageCars), c("Id", "GarageType", "GarageCars", "GarageArea")]
dat[is.na(dat$BsmtFinSF1), c("Id", "MSSubClass", "BsmtQual", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF")]
dat[is.na(dat$Exterior1st), c("Id", "MSSubClass", "Exterior1st", "Exterior2nd")]
dat[is.na(dat$BsmtFinSF1), c("Id", "MSSubClass", "BsmtQual", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF")]
dat[is.na(dat$BsmtFullBath), c("Id", "MSSubClass", "BsmtQual", "BsmtFullBath", "BsmtHalfBath")]
dat[is.na(dat$KitchenQual), c("Id", "MSSubClass", "KitchenQual")]
dat[is.na(dat$Functional), c("Id", "MSSubClass", "Functional")]
dat[is.na(dat$GarageCars), c("Id", "GarageType", "GarageCars", "GarageArea")]
dat[is.na(dat$SaleType), c("Id", "MSSubClass", "SaleType")]
da[dat$BsmtQual == "NoBsmt", "BsmtFinSF1"]
dat[dat$BsmtQual == "NoBsmt", "BsmtFinSF1"]
dat$MSSubClass[c(1,2)]
dat$MSSubClass[c(1,200)]
dat$MSSubClass[c(2,200)]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(glmnet)
na.count = function (dat){
dat %>% apply(., 2, is.na) %>% apply(.,2,sum) %>% .[.!=0]
}
train = read.csv("./data/train.csv")
head(train)
str(train)
test = read.csv("./data/test.csv")
test$SalePrice = 1000
dat = rbind(train, test)
indx = nrow(train)
dat$MSSubClass = factor(dat$MSSubClass)
dat$OverallCond = factor(dat$OverallCond)
dat$OverallQual = factor(dat$OverallQual)
na.count(dat[1:indx,])
levels(dat$Alley) = c(levels(dat$Alley), "NoAccess")
dat[is.na(dat$Alley), "Alley"] = "NoAccess"
levels(dat$BsmtQual) = c(levels(dat$BsmtQual), "NoBsmt")
dat[is.na(dat$BsmtQual), "BsmtQual"] = "NoBsmt"
levels(dat$BsmtCond) = c(levels(dat$BsmtCond), "NoBsmt")
dat[is.na(dat$BsmtCond), "BsmtCond"] = "NoBsmt"
levels(dat$BsmtExposure) = c(levels(dat$BsmtExposure), "NoBsmt")
dat[is.na(dat$BsmtExposure), "BsmtExposure"] = "NoBsmt"
levels(dat$BsmtFinType1) = c(levels(dat$BsmtFinType1), "NoBsmt")
dat[is.na(dat$BsmtFinType1), "BsmtFinType1"] = "NoBsmt"
levels(dat$BsmtFinType2) = c(levels(dat$BsmtFinType2), "NoBsmt")
dat[is.na(dat$BsmtFinType2), "BsmtFinType2"] = "NoBsmt"
levels(dat$FireplaceQu) = c(levels(dat$FireplaceQu), "NoFpl")
dat[is.na(dat$FireplaceQu), "FireplaceQu"] = "NoFpl"
levels(dat$GarageType) = c(levels(dat$GarageType), "NoGrg")
dat[is.na(dat$GarageType), "GarageType"] = "NoGrg"
levels(dat$GarageFinish) = c(levels(dat$GarageFinish), "NoGrg")
dat[is.na(dat$GarageFinish), "GarageFinish"] = "NoGrg"
levels(dat$GarageQual) = c(levels(dat$GarageQual), "NoGrg")
dat[is.na(dat$GarageQual), "GarageQual"] = "NoGrg"
levels(dat$GarageCond) = c(levels(dat$GarageCond), "NoGrg")
dat[is.na(dat$GarageCond), "GarageCond"] = "NoGrg"
levels(dat$PoolQC) = c(levels(dat$PoolQC), "NoPool")
dat[is.na(dat$PoolQC), "PoolQC"] = "NoPool"
levels(dat$Fence) = c(levels(dat$Fence), "NoFence")
dat[is.na(dat$Fence), "Fence"] = "NoFence"
levels(dat$MiscFeature) = c(levels(dat$MiscFeature), "NoMisc")
dat[is.na(dat$MiscFeature), "MiscFeature"] = "NoMisc"
na.count(dat[1:indx,])
print("Property Ids reporting NA for GarageYrBlt")
dat[1:indx,] %>% .[is.na(.$GarageYrBlt),c("Id", "GarageType", "GarageYrBlt")]
table(dat$Electrical[1:indx], dnn = "Elec. System Used") %>% prop.table() %>% round(digits = 4)
table(dat$MasVnrType[1:indx], dnn = "Masonry Veneer Type") %>% prop.table() %>% round(digits = 4)
hist(dat$MasVnrArea[1:indx], xlab = "Area", main = "Histogram of MasVnrArea")
hist(dat$LotFrontage[1:indx], xlab = "Area", main = "Histogram of LotArea")
dat[is.na(dat$Electrical), "Electrical"] = dat$Electrical[1:indx] %>% table() %>% which.max() %>% names()
dat[is.na(dat$MasVnrType), "MasVnrType"] = dat$MasVnrType[1:indx] %>% table() %>% which.max() %>% names()
dat[is.na(dat$MasVnrArea), "MasVnrArea"] = dat$MasVnrArea[1:indx] %>% median(., na.rm = TRUE)
dat[is.na(dat$LotFrontage), "LotFrontage"] = dat$LotFrontage[1:indx] %>% median(., na.rm = TRUE)
dat = subset(dat, select = -GarageYrBlt)
na.count(dat[1:indx,])
na.count(dat[(indx+1):nrow(dat),])
dat[is.na(dat$Exterior1st), c("Id", "MSSubClass", "Exterior1st", "Exterior2nd")]
dat[is.na(dat$BsmtFinSF1), c("Id", "MSSubClass", "BsmtQual", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF")]
dat[is.na(dat$BsmtFullBath), c("Id", "MSSubClass", "BsmtQual", "BsmtFullBath", "BsmtHalfBath")]
dat[is.na(dat$KitchenQual), c("Id", "MSSubClass", "KitchenQual")]
dat[is.na(dat$Functional), c("Id", "MSSubClass", "Functional")]
dat[is.na(dat$GarageCars), c("Id", "GarageType", "GarageCars", "GarageArea")]
dat[is.na(dat$SaleType), c("Id", "MSSubClass", "SaleType")]
dat[1:indx,] %>% table()
dat$Exterior1st[1:indx] %>% table()
dat[1:indx,] %>% table(Exterior1st, MSSubClass)
dat[1:indx,] %>% table(.$Exterior1st, .$MSSubClass)
?table
table(dat$Exterior1st[1:indx], dat$MSSubClass[1:indx])
table(dat$Exterior1st[1:indx], dat$MSSubClass[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table() %>% round(digits = 4)
?prop.table
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4) %>% which.max()
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4) #%>% which.max()
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4) %>% which.max() %>% names()
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4) %>% which.max() %>% names()
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4) %>% which.max()
writeLines("The first table of each pair of table show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by `MSSubClass`")
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("The first table of each pair of table show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by \`MSSubClass\`")
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("The first table of each pair of table show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by \*MSSubClass\*")
writeLines("The first table of each pair of table show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by 'MSSubClass'")
table(Xterior1 = dat$Exterior1st[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("The first table of each pair of table show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by 'MSSubClass'\n")
table(Xterior1 = dat$Exterior1st[1:indx], dnn = "Exterior1st") %>% prop.table() %>% round(digits = 4)
writeLines("The first table of each pair of table show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by 'MSSubClass'\n")
table(Xterior1 = dat$Exterior1st[1:indx], dnn = "Exterior1st") %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx]) %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], dnn = "GarageCars") %>% prop.table() %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], GarageType = dat$GarageType[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], dnn = "GarageCars") %>% prop.table() %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], GarageType = dat$GarageType[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(GarageArea = dat$GarageArea[1:indx], dnn = "GarageArea") %>% prop.table() %>% round(digits = 4)
table(GarageArea = dat$GarageArea[1:indx], GarageType = dat$GarageType[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_histogram()
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+ title(main = "Overall Garage Area Distbn",
xlab = "Area in sq.ft", ylab = "")
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+ labs(title = "Overall Garage Area Distbn",
x = "Area in sq.ft", y = "")
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+ facet_grid(.~MSSubClass)+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+ facet_grid(MSSubClass~.)+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+ facet_grid(GarageType~.)+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
dat[1:indx,] %>% ggplot(aes(x = GarageArea, group_by = GarageType))+ geom_density()
dat[1:indx,] %>% ggplot(aes(x = GarageArea, colour = GarageType))+ geom_density()
dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+ facet_grid(GarageType~.)+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>%
ggplot(aes(x = GarageArea))+ geom_density()+ facet_grid(GarageType~.)+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
library(gridExtra)
garage.plot.1 = dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
garage.plot.2 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>% ggplot(aes(x = GarageArea))+
geom_density()+ facet_grid(GarageType~.)+
labs(title = "Garage Area Distribution by Garage Type", x = "Area in sq.ft", y = "")
grid.arrange(garage.plot.1, garage.plot.2)
grid.arrange(garage.plot.1, garage.plot.2, ncol = 2)
garage.plot.1 = dat[1:indx,] %>% ggplot(aes(x = GarageArea))+ geom_density()+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
garage.plot.2 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>% ggplot(aes(x = GarageArea))+
geom_density()+ facet_grid(GarageType~.)+
labs(title = "Area Distribution by Garage Type", x = "Area in sq.ft", y = "")
grid.arrange(garage.plot.1, garage.plot.2, ncol = 2)
garage.plot.1 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>%
ggplot(aes(x = GarageArea))+ geom_density()+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
garage.plot.2 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>% ggplot(aes(x = GarageArea))+
geom_density()+ facet_grid(GarageType~.)+
labs(title = "Area Distribution by Garage Type", x = "Area in sq.ft", y = "")
grid.arrange(garage.plot.1, garage.plot.2, ncol = 2)
writeLines("The first table of each pair of table show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by 'MSSubClass'\n")
table(Xterior1 = dat$Exterior1st[1:indx], dnn = "Exterior1st") %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], dnn = "Exterior2nd") %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(KitchenQual = dat$KitchenQual[1:indx], dnn = "KitchenQual") %>% prop.table() %>% round(digits = 4)
table(KitchenQual = dat$KitchenQual[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Functional = dat$Functional[1:indx], dnn = "Functional") %>% prop.table() %>% round(digits = 4)
table(Functional = dat$Functional[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(SaleType = dat$SaleType[1:indx], dnn = "SaleType") %>% prop.table() %>% round(digits = 4)
table(SaleType = dat$SaleType[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], dnn = "GarageCars") %>% prop.table() %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], GarageType = dat$GarageType[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
garage.plot.1 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>%
ggplot(aes(x = GarageArea))+ geom_density()+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
garage.plot.2 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>% ggplot(aes(x = GarageArea))+
geom_density()+ facet_grid(GarageType~.)+
labs(title = "Area Distribution by Garage Type", x = "Area in sq.ft", y = "")
grid.arrange(garage.plot.1, garage.plot.2, ncol = 2)
dat$Exterior1st[2152]
dat$Exterior1st[2152]
>mean
?mean
?mode
?median
dat$Exterior1st[dat$MSSubClass == 30]
x = dat$Exterior1st[dat$MSSubClass == 30] %>% table() %>% which.max() %>% names()
x = dat$Exterior2nd[dat$MSSubClass == 30] %>% table() %>% which.max() %>% names()
dat$Exterior2nd[dat$MSSubClass == 30] %>% table()
dat$Exterior1st[dat$MSSubClass == 30] %>% table()
x = dat$Exterior1st[dat$MSSubClass == 30] %>% table() %>% which.max() %>% names()
dat$GarageCars[dat$GarageType == "Detchd"] %>% median(na.rm = TRUE)
#   GarageCars
x = dat$GarageCars[dat$GarageType == "Detchd"] %>% median(na.rm = TRUE)
dat$GarageCars[2577] = x
x = dat$GarageArea[dat$GarageType == "Detchd"] %>% median(na.rm = TRUE)
dat$GarageArea[2577] = x
na.count(dat)
dat[is.na(dat$MSZoning), c("Id", "MSSubClass", "MSZoning")]
dat[is.na(dat$MSZoning), c("Id", "Neighborhood", "MSZoning")]
dat[is.na(dat$Utilities), c("Id", "MSSubClass", "Utilities")]
dat[is.na(dat$Utilities), c("Id", "MSSubClass", "Neighborhood", "Utilities")]
dat[is.na(dat$MSZoning), c("Id", "Neighborhood", "MSZoning")]
dat[is.na(dat$Utilities), c("Id", "Neighborhood", "Utilities")]
dat[is.na(dat$MSZoning), c("Id", "Neighborhood", "MSZoning")]
writeLines("The first table of each pair of tables show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by 'MSSubClass'\n")
table(Xterior1 = dat$Exterior1st[1:indx], dnn = "Exterior1st") %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(Xterior2 = dat$Exterior2nd[1:indx], dnn = "Exterior2nd") %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(KitchenQual = dat$KitchenQual[1:indx], dnn = "KitchenQual") %>% prop.table() %>% round(digits = 4)
table(KitchenQual = dat$KitchenQual[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(Functional = dat$Functional[1:indx], dnn = "Functional") %>% prop.table() %>% round(digits = 4)
table(Functional = dat$Functional[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(SaleType = dat$SaleType[1:indx], dnn = "SaleType") %>% prop.table() %>% round(digits = 4)
table(SaleType = dat$SaleType[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], dnn = "GarageCars") %>% prop.table() %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], GarageType = dat$GarageType[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
garage.plot.1 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>%
ggplot(aes(x = GarageArea))+ geom_density()+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
garage.plot.2 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>% ggplot(aes(x = GarageArea))+
geom_density()+ facet_grid(GarageType~.)+
labs(title = "Area Distribution by Garage Type", x = "Area in sq.ft", y = "")
grid.arrange(garage.plot.1, garage.plot.2, ncol = 2)
writeLines("The first table of each pair of tables show the overall distribution of a feature across all examples and the second one the distribution of the feature stratified by 'MSSubClass'\n")
table(Xterior1 = dat$Exterior1st[1:indx], dnn = "Exterior1st") %>% prop.table() %>% round(digits = 4)
table(Xterior1 = dat$Exterior1st[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(Xterior2 = dat$Exterior2nd[1:indx], dnn = "Exterior2nd") %>% prop.table() %>% round(digits = 4)
table(Xterior2 = dat$Exterior2nd[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(KitchenQual = dat$KitchenQual[1:indx], dnn = "KitchenQual") %>% prop.table() %>% round(digits = 4)
table(KitchenQual = dat$KitchenQual[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(Functional = dat$Functional[1:indx], dnn = "Functional") %>% prop.table() %>% round(digits = 4)
table(Functional = dat$Functional[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(SaleType = dat$SaleType[1:indx], dnn = "SaleType") %>% prop.table() %>% round(digits = 4)
table(SaleType = dat$SaleType[1:indx], MSSubclass = dat$MSSubClass[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(GarageCars = dat$GarageCars[1:indx], dnn = "GarageCars") %>% prop.table() %>% round(digits = 4)
table(GarageCars = dat$GarageCars[1:indx], GarageType = dat$GarageType[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
garage.plot.1 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>%
ggplot(aes(x = GarageArea))+ geom_density()+
labs(title = "Overall Garage Area Distribution", x = "Area in sq.ft", y = "")
garage.plot.2 = dat[1:indx,] %>% filter(.$GarageType != "NoGrg") %>% ggplot(aes(x = GarageArea))+
geom_density()+ facet_grid(GarageType~.)+
labs(title = "Area Distribution by Garage Type", x = "Area in sq.ft", y = "")
grid.arrange(garage.plot.1, garage.plot.2, ncol = 2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, echo = FALSE)
table(MSZoning = dat$MSZoning[1:indx], dnn = "MSZoning") %>% prop.table() %>% round(digits = 4)
table(MSZoning = dat$MSZoning[1:indx], Neighborhood = dat$Neighborhood[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(Utilities = dat$Utilities[1:indx], dnn = "Utilities") %>% prop.table() %>% round(digits = 4)
table(Utilities = dat$Utilities[1:indx], Neighborhood = dat$Neighborhood[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(MSZoning = dat$MSZoning[1:indx], dnn = "MSZoning") %>% prop.table() %>% round(digits = 4)
table(MSZoning = dat$MSZoning[1:indx], Neighborhood = dat$Neighborhood[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(MSZoning = dat$MSZoning[1:indx], dnn = "MSZoning") %>% prop.table() %>% round(digits = 4)
table(MSZoning = dat$MSZoning[1:indx], Neighborhood = dat$Neighborhood[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n")
table(Utilities = dat$Utilities[1:indx], dnn = "Utilities") %>% prop.table() %>% round(digits = 4)
table(Utilities = dat$Utilities[1:indx], Neighborhood = dat$Neighborhood[1:indx]) %>%
prop.table(margin = 2) %>% round(digits = 4)
writeLines("\n"
